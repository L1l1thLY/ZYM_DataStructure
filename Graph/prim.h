#ifndef PRIM_H
#define PRIM_H

#include "common.h"

typedef int AdjMatrix[N][N];      // 用二维数组作为邻接矩阵表示 

// 树边结点
typedef struct TreeEdgeNode{
	int fromvex;                  // 边的起点
	int tovex;                    // 边的终点 
	int length;                   // 边上的权 
}TreeEdgeNode; 

typedef TreeEdgeNode MST[N-1];    // 最小生成树类型 

AdjMatrix	G;                    // 连通网的带权邻接矩阵,作为Prim算法的输入 
MST 		T;                    // 存放G的最小生成树，作为Prim算法的输出 

/******************************************************************************
 *    打印错误信息                                                            *
 ******************************************************************************/
void Log(char * msg);

/******************************************************************************
 *    图的生成算法                                                            *
 ******************************************************************************/
void CreateGraph(AdjMatrix G, int vexnum, int arcnum, int arcs[][MAX], int w[]);

/******************************************************************************
 *    默认图生成                                                              *
 ******************************************************************************/
void DefaultCreateGraph(AdjMatrix G);

/******************************************************************************
 *    构造初始的时候选轻边集T[0...n-2]，树边集TE!=Null,红点集U={r}            *
 ******************************************************************************/
void InitCandidateSet(AdjMatrix G, MST T, int r);
 
/******************************************************************************
 *    在当前候选轻边集中选择一条轻边,即选择长度最短的紫边                     *
 ******************************************************************************/ 
int SelectLightEdge(MST T, int k);

/******************************************************************************
 *    调整候选边集                                                            *
 ******************************************************************************/
void ModifyCandidateSet(AdjMatrix G, MST T, int k, int v);

/******************************************************************************
 *    求图G的以r为根的MST,r为开始的结点                                       *
 ******************************************************************************/
void PrimMST(AdjMatrix G, MST T, int r);

/******************************************************************************
 *    打印最小生成树                                                           *
 ******************************************************************************/
void PrintMST(MST T);

#endif // PRIM_H
