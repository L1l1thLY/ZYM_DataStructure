#ifndef SEQLIST_H
#define SEQLIST_H

#define	MAXSIZE  100          // 此处的宏定义常量表示线性表可能达到的最大长度

typedef int ElemType; 
typedef struct SeqListNode
{ 
	ElemType  elem[MAXSIZE];  // 线性表占用的数组空间
	int       last;           // 记录线性表中最后一个元素在数组elem[ ]中的
	                          // 位置（下标值），空表置为-1
}SeqListNode, *SeqList;

typedef enum Message{Success, Fail, Fatal, RangError} Message;

/**************************************************************************** 
 *          初始化线性表L                                                   * 
 ****************************************************************************/
int InitialSeqList(SeqList * L, ElemType e[], int len); 

/**************************************************************************** 
 *          销毁线性表L                                                     * 
 ****************************************************************************/
int DestroySeqList(SeqList L); 

/**************************************************************************** 
 *          查找元素e在顺序表L中的位置                                      * 
 ****************************************************************************/
int LocateSeqList(SeqList L, ElemType e);

/****************************************************************************
 *          在L中第i个位置之前插入新的数据元素e，L的长度加1                 * 
 ****************************************************************************/
int InsertSeqList(SeqList L, int pos, ElemType e);

/****************************************************************************
 *          删除L中第i个位置上元素e，并返回该元素                           * 
 ****************************************************************************/
int DeleteSeqList(SeqList L, int pos, ElemType * e);

#endif // ! SEQLIST_H

/***************************************************************************** 
 * 1. 修改函数的命名规则 - 名称尽量全拼，如果是内部使用函数则以小写方式书写  * 
 * 2. typedef的ElemType 用int类型 - 考虑文件存储结构的8/4位对齐问题          * 
 * 3. 错误信息使用enum方式定义，且以大写字母开发，驼峰方式命名               * 
 * 4. 不定义true和false，在c中非0代表true,0代表false                         * 
 * 5. 注释问题：对句子的单行注释，如果超过打印线则换行对齐，对于函数名的注释 * 
 *    则采用，星号线（*******）方式                                          * 
 * 6. i,j,k - 用于循环使用， p,q,r - 用于指针的命名                          * 
 * 7. 在访问结构体时，使用->, 避免使用"."                                    * 
 * 8. 结构体的命名XXXYYYNode, *XXXYYY, **XXX                                 *
 * 9. 在xxx.h文件中仅实现结构体，宏，方法的定义；不引用任何头文件            *
 * 10.在xxx.c文件中实现方法和定义变量，主要是常量；应用所需的头文件          *
 * 11.在main.c中一定要引用<stdlib.h>,<stdio.h>                               *
 *****************************************************************************/ 
