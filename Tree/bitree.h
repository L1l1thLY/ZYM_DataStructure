#ifndef BITREE_H
#define BITREE_H

#define NUM 			50
#define STACKSIZE 		50
#define MAXSIZE 		50  //队列的最大长度
#define ENDIDENTIFIER 	-9999
#define RANGE   		13

typedef enum Message{Success, Fail} Message;

typedef int DataType;

typedef struct BiNode
{
	DataType		data;
	struct BiNode * lchild;
	struct BiNode * rchild;
}BiNode, *BiTree;

typedef BiNode* QueueElementType;
typedef BiNode* StackElementType;

typedef struct
{
	QueueElementType 	element[MAXSIZE];  // 队列的元素空间
	int					front;             // 头指针指示器
	int					rear;              // 尾指针指示器
}SeqQueue;

typedef struct
{
	StackElementType	elem[STACKSIZE]; // 存放栈中元素的一维数组
	int					top;             // 存放栈顶元素的下标，top为-1表示空栈
}SeqStack;



// *************** 树相关操作 **********************  
/*****************************************************************************
 *        创建二叉树                                                         *
 *****************************************************************************/
void CreateBiTree(BiTree *bt, DataType dts[], int * pos);

/*****************************************************************************
 *        打印元素                                                           *
 *****************************************************************************/
void visit(DataType dt);

/*****************************************************************************
 *        先序遍历二叉树                                                     *
 *****************************************************************************/
void PreOrder(BiTree root);

/*****************************************************************************
 *        中序遍历二叉树                                                     *
 *****************************************************************************/
void InOrder(BiTree root);

/*****************************************************************************
 *        后序遍历二叉树                                                     *
 *****************************************************************************/
void PostOrder(BiTree root);

/*****************************************************************************
 *        先序方式遍历叶子节点                                               *
 *****************************************************************************/
void PreOrderLeaves(BiTree root);

/*****************************************************************************
 *        计算叶子节点数(递归算法)                                           *
 *****************************************************************************/
int LeafCount(BiTree root, int * sum);

/*****************************************************************************
 *        计算叶子节点数(非递归方式实现)                                     *
 *****************************************************************************/
int LeafCountNonRecursion(BiTree root); 

/*****************************************************************************
 *        后序遍历求二叉树的高度(递归算法)                                   *
 *****************************************************************************/
int PostTreeDepth(BiTree bt);

/*****************************************************************************
 *        前序遍历求二叉树bt高度(递归算法)                                   *
 *****************************************************************************/
int PreTreeDepth(BiTree bt,  int * h, int cur);

/*****************************************************************************
 *        按竖向树状打印的二叉树                                             *
 *****************************************************************************/
void PrintTree(BiTree bt,int nLayer);

/*****************************************************************************
 *        中序遍历二叉树(非递归)                                             *
 *****************************************************************************/
void InOrderNonRecursion(BiTree root);

/*****************************************************************************
 *        后序遍历二叉树(非递归)                                             *
 *****************************************************************************/
void PostOrderNonRecursion(BiTree root);

/*****************************************************************************
 *        层次遍历二叉树                                                     *
 *****************************************************************************/
int LayerOrder(BiTree bt);

// *************** 队列相关操作 **********************  
void InitQueue(SeqQueue *Q);

int EnterQueue(SeqQueue *Q, QueueElementType x);

int DeleteQueue(SeqQueue *Q, QueueElementType *x);

int IsEmpty(SeqQueue *Q);

// *************** 栈相关操作 **********************  
void InitStack(SeqStack *S);

int IsStackEmpty(SeqStack *S);

int IsFull(SeqStack *S);

int Push(SeqStack *S,StackElementType x);

int Pop(SeqStack *S,StackElementType *x);

#endif // END BITREE_H 
